package edu.oregonstate.carto.mapcomposer.texture.gui;

import com.jhlabs.image.Gradient;
import ika.gui.ColorButton;
import javax.swing.JComboBox;
import javax.swing.JSlider;

/**
 * @deprecated 
 * @author Charlotte Hoarau, COGIT Laboratory, IGN France
 */
public class ColorGradientPanel extends javax.swing.JPanel {

    /**
     * Creates new form ColorGradientPanel
     */
    public ColorGradientPanel() {
        initComponents();
        
        this.firePropertyChange(null, null, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        colorButton = new ika.gui.ColorButton();
        positionSlider = new javax.swing.JSlider();
        interpolationComboBox = new javax.swing.JComboBox();
        colorSpaceComboBox = new javax.swing.JComboBox();

        colorButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                stateChange(evt);
            }
        });
        add(colorButton);

        positionSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                stateChange(evt);
            }
        });
        add(positionSlider);

        interpolationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Linear", "Spline", "Constant", "Circle Up", "Circle Down" }));
        interpolationComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemCbxStateChange(evt);
            }
        });
        interpolationComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                interpolationPropertyChange(evt);
            }
        });
        add(interpolationComboBox);

        colorSpaceComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RGB", "HUE_CW", "HUE_CCW" }));
        colorSpaceComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemCbxStateChange(evt);
            }
        });
        colorSpaceComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                interpolationPropertyChange(evt);
            }
        });
        add(colorSpaceComboBox);
    }// </editor-fold>//GEN-END:initComponents

    private void stateChange(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_stateChange
        this.firePropertyChange(null, null, null);
    }//GEN-LAST:event_stateChange

    private void interpolationPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_interpolationPropertyChange
        this.firePropertyChange(null, null, null);
    }//GEN-LAST:event_interpolationPropertyChange

    private void itemCbxStateChange(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemCbxStateChange
        this.firePropertyChange(null, null, null);
    }//GEN-LAST:event_itemCbxStateChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ika.gui.ColorButton colorButton;
    private javax.swing.JComboBox colorSpaceComboBox;
    private javax.swing.JComboBox interpolationComboBox;
    private javax.swing.JSlider positionSlider;
    // End of variables declaration//GEN-END:variables

    public JComboBox getColorSpaceComboBox() {
        return colorSpaceComboBox;
    }

    public void setColorSpaceComboBox(JComboBox colorSpaceComboBox) {
        this.colorSpaceComboBox = colorSpaceComboBox;
    }

    public ColorButton getColorButton() {
        return colorButton;
    }

    public void setColorButton(ColorButton colorButton) {
        this.colorButton = colorButton;
    }

    public JComboBox getInterpolationComboBox() {
        return interpolationComboBox;
    }
    
    public byte getInterpolation() {
        
        int method = 0;
        switch (interpolationComboBox.getSelectedIndex())
        {
          case 0:
            method = Gradient.LINEAR;
            break;
          case 1:
            method = Gradient.SPLINE;
              break;
          case 2:
            method = Gradient.CONSTANT;
              break;
          case 3:
            method = Gradient.CIRCLE_UP;
              break;
          case 4:
            method = Gradient.CIRCLE_DOWN;
              break;
          default:
            method = 0;
        }
        
        int colorSpace = 0;
        switch (colorSpaceComboBox.getSelectedIndex())
        {
          case 0:
            colorSpace = Gradient.RGB;
            break;
          case 1:
            colorSpace = Gradient.HUE_CW;
              break;
          case 2:
            colorSpace = Gradient.HUE_CCW;
              break;
          default:
            colorSpace = 0;
        }
        
        byte interpolation = (byte) (method|colorSpace);
        
        return interpolation;
    }

    public void setInterpolationComboBox(JComboBox interpolationComboBox) {
        this.interpolationComboBox = interpolationComboBox;
    }

    public JSlider getPositionSlider() {
        return positionSlider;
    }

    public void setPositionSlider(JSlider positionSlider) {
        this.positionSlider = positionSlider;
    }
}
