package edu.oregonstate.carto.mapcomposer.texture.gui;

import com.jhlabs.image.LinearColormap;
import ika.utils.FileUtils;
import edu.oregonstate.carto.imageCollection.TiledImage;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import edu.oregonstate.carto.mapcomposer.texture.style.Texture;
import edu.oregonstate.carto.mapcomposer.texture.TiledTextureFilter;
import edu.oregonstate.carto.mapcomposer.texture.TiledTextureProvider;

/**
 *
 * @author Charlotte Hoarau, COGIT Laboratory, IGN France
 */
public class TextureComposerPanel extends javax.swing.JPanel {
    
    //private TiledTextureFilter ttf = new TiledTextureFilter(0, 0, 1);
    private TiledTextureFilter ttf;
    
    public TiledTextureFilter getTtf() {
        return ttf;
    }

    public void setTtf(TiledTextureFilter newFilter) {
        this.ttf = newFilter;
        this.writeGUI();
    }
    
    private BufferedImage texturePreview;
    
    /**
     * Creates new form TextureComposerPanel
     */
    public TextureComposerPanel() {
        initComponents();
        if (this.ttf == null) {
            ttf = new TiledTextureFilter(0, 0, 1);
        }
        
        this.readGUI();
        this.writeGUI();
    }
    
    public TextureComposerPanel(Texture texture){        
        initComponents();
        this.ttf = new TiledTextureFilter(texture);
        this.writeGUI();
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generateButton = new javax.swing.JButton();
        textureLabel = new javax.swing.JLabel();
        stretchSlider = new javax.swing.JSlider();
        stretchLabel = new javax.swing.JLabel();
        angleSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        amountSlider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        turbulenceSlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        scaleSlider = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        saveTextureButton = new javax.swing.JButton();
        colorButton1 = new ika.gui.ColorButton();
        colorButton2 = new ika.gui.ColorButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        loadTextureButton = new javax.swing.JButton();

        generateButton.setText("Generate Tiled Texture");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        textureLabel.setBackground(new java.awt.Color(0, 0, 0));
        textureLabel.setText("textureLabel");

        stretchSlider.setMajorTickSpacing(20);
        stretchSlider.setMinorTickSpacing(20);
        stretchSlider.setPaintLabels(true);
        stretchSlider.setPaintTicks(true);
        stretchSlider.setValue(20);
        stretchSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        stretchSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChange(evt);
            }
        });

        stretchLabel.setText("Stretch");

        angleSlider.setMajorTickSpacing(90);
        angleSlider.setMaximum(360);
        angleSlider.setMinorTickSpacing(15);
        angleSlider.setPaintLabels(true);
        angleSlider.setPaintTicks(true);
        angleSlider.setValue(45);
        angleSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChange(evt);
            }
        });

        jLabel2.setText("Angle");

        amountSlider.setMajorTickSpacing(20);
        amountSlider.setMinorTickSpacing(20);
        amountSlider.setPaintLabels(true);
        amountSlider.setPaintTicks(true);
        amountSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChange(evt);
            }
        });

        jLabel3.setText("Amount");

        turbulenceSlider.setMajorTickSpacing(1);
        turbulenceSlider.setMaximum(6);
        turbulenceSlider.setMinorTickSpacing(1);
        turbulenceSlider.setPaintLabels(true);
        turbulenceSlider.setPaintTicks(true);
        turbulenceSlider.setSnapToTicks(true);
        turbulenceSlider.setValue(1);
        turbulenceSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChange(evt);
            }
        });

        jLabel4.setText("Turbulence");

        scaleSlider.setMajorTickSpacing(100);
        scaleSlider.setMaximum(200);
        scaleSlider.setMinorTickSpacing(10);
        scaleSlider.setPaintLabels(true);
        scaleSlider.setPaintTicks(true);
        scaleSlider.setValue(32);
        scaleSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChange(evt);
            }
        });

        jLabel5.setText("Scale");

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        saveTextureButton.setText("Save XML");
        saveTextureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTextureButtonActionPerformed(evt);
            }
        });

        colorButton1.setColor(new java.awt.Color(0, 102, 51));
        colorButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                colorButton1stateChange(evt);
            }
        });

        colorButton2.setColor(new java.awt.Color(0, 204, 51));
        colorButton2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                colorButton2stateChange(evt);
            }
        });

        jLabel1.setText("Color 1");

        jLabel6.setText("Color 2");

        loadTextureButton.setText("Load XML");
        loadTextureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTextureButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel5)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel2)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, stretchLabel)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(colorButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(44, 44, 44)
                                .add(jLabel6)
                                .add(18, 18, 18)
                                .add(colorButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(scaleSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(turbulenceSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(angleSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(stretchSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(amountSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 70, Short.MAX_VALUE)
                        .add(textureLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(saveTextureButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(loadTextureButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(generateButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(closeButton)
                        .add(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(jLabel1)
                            .add(colorButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel6)
                            .add(colorButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(scaleSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel5))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(turbulenceSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(jLabel2)
                            .add(angleSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(stretchLabel)
                            .add(stretchSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(jLabel3)
                            .add(amountSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18))
                    .add(layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(textureLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(generateButton)
                    .add(saveTextureButton)
                    .add(closeButton)
                    .add(loadTextureButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings({"null", "ConstantConditions"})
    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        try {
            String directoryPath = FileUtils.askDirectory(null, "Name the result directory", true, null);
            File resultDirectory = new File(directoryPath);
            org.apache.commons.io.FileUtils.forceDelete(resultDirectory);
            org.apache.commons.io.FileUtils.forceMkdir(resultDirectory);
            
            String structurePath = FileUtils.askDirectory(null, "Get a structure directory", true, null);
            File structureDirectory = new File(structurePath); // FIXME ?
            
            if (directoryPath == null || structurePath == null)
                return;
            this.readGUI();
            
            System.out.println("---- Starting Rendering the texture ----");
            
            TiledImage tiledImage = new TiledImage(resultDirectory.getAbsolutePath());
            TiledTextureProvider generator = new TiledTextureProvider(this.ttf, tiledImage);
            tiledImage.createTiledImage(structureDirectory, true, generator, null);
            
            System.out.println("---- Stop Rendering the texture ----");

            Texture texture = new Texture(this.ttf);
            File xml = new File(resultDirectory, FileUtils.getFileNameWithoutExtension(resultDirectory.getName()));
            texture.marshal(xml.getAbsolutePath() + ".xml");
            
            System.out.println("---- Texture saved ----");
            
        } catch (IOException ex) {
            Logger.getLogger(TextureComposerPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(TextureComposerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_generateButtonActionPerformed

    private void sliderStateChange(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChange
        readGUI();
    }//GEN-LAST:event_sliderStateChange

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        ((JFrame)this.getParent().getParent().getParent().getParent()).dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void saveTextureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTextureButtonActionPerformed
        String filePath = FileUtils.askFile(null, "Save XML Style File", null, false, "xml");
        if (filePath == null)
            return;
        File file = new File(filePath);
        
        Texture texture = new Texture(this.ttf);
        texture.marshal(file.getAbsolutePath());
    }//GEN-LAST:event_saveTextureButtonActionPerformed

    private void colorButton1stateChange(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_colorButton1stateChange
        this.readGUI();
    }//GEN-LAST:event_colorButton1stateChange

    private void colorButton2stateChange(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_colorButton2stateChange
        this.readGUI();
    }//GEN-LAST:event_colorButton2stateChange

    private void loadTextureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTextureButtonActionPerformed
        String filePath = FileUtils.askFile(null, "Load XML Style File", null, true, "xml");
        if (filePath == null)
            return;
        Texture texture = Texture.unmarshal(filePath);
        this.setTtf(new TiledTextureFilter(texture));
    }//GEN-LAST:event_loadTextureButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider amountSlider;
    private javax.swing.JSlider angleSlider;
    private javax.swing.JButton closeButton;
    private ika.gui.ColorButton colorButton1;
    private ika.gui.ColorButton colorButton2;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton loadTextureButton;
    private javax.swing.JButton saveTextureButton;
    private javax.swing.JSlider scaleSlider;
    private javax.swing.JLabel stretchLabel;
    private javax.swing.JSlider stretchSlider;
    private javax.swing.JLabel textureLabel;
    private javax.swing.JSlider turbulenceSlider;
    // End of variables declaration//GEN-END:variables

    private void readGUI() {

        ttf.setStretch((float)this.stretchSlider.getValue() / 100.0f);
        ttf.setAngle((float)this.angleSlider.getValue() * (float)Math.PI / 360.0f );
        ttf.setAmount((float)this.amountSlider.getValue() / 100.0f);
        ttf.setTurbulence(turbulences[this.turbulenceSlider.getValue()]);
        ttf.setScale((float)this.scaleSlider.getValue());
        
        Color c1 = this.colorButton1.getColor();
        Color c2 = this.colorButton2.getColor();
                        
        LinearColormap g = new LinearColormap(c1.getRGB(), c2.getRGB());
        ttf.setColormap(g);
        
        updatePreview();
    }
    
    float[] turbulences = new float[]{0f, 1f, 2f, 4f, 8f, 16f, 32f};
    
    private void writeGUI() {
        float stretch = this.ttf.getStretch();
        float amount = this.ttf.getAmount();
        float angle = this.ttf.getAngle();
        
        int turbulence = (int)this.ttf.getTurbulence();
        int sliderValue;
        switch (turbulence) {
            case 0:
                sliderValue = 0;
                break;
            case 1:
                sliderValue = 1;
                break;
            case 2:
                sliderValue = 2;
                break;
            case 4:
                sliderValue = 3;
                break;
            case 8:
                sliderValue = 4;
                break;
           case 16:
                sliderValue = 5;
                break;
           case 32:
                sliderValue = 6;
                break;
           default:
               sliderValue = 1;
               break;            
        }
        LinearColormap cm = (LinearColormap)this.ttf.getColormap();
        
        this.colorButton1.setColor(new Color(cm.getColor1()));
        this.colorButton2.setColor(new Color(cm.getColor2()));
        this.stretchSlider.setValue((int)(stretch * 100));
        this.amountSlider.setValue((int)(amount * 100));
        this.angleSlider.setValue((int)(angle * 360 / Math.PI));
        this.turbulenceSlider.setValue(sliderValue);
        
        this.repaint();
        updatePreview();
    }
    
    private JLabel updatePreview() {
        this.texturePreview = new BufferedImage(256, 256, BufferedImage.TYPE_INT_ARGB);
        
        //ttf.setZoom(1);
        this.texturePreview = this.ttf.filter(this.texturePreview, null);
        
        this.textureLabel.setIcon(new ImageIcon(this.texturePreview));
        return this.textureLabel;
    }
    
}
